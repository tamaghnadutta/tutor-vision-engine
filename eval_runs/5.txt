(env) tamaghnadutta@Tamaghnas-MacBook-Air tutor-vision-engine % make demo
python scripts/demo.py
/Users/tamaghnadutta/.pyenv/versions/3.10.2/lib/python3.10/site-packages/pydantic/_internal/_generate_schema.py:404: UserWarning: <built-in function any> is not a Python type (it may be an instance of an object), Pydantic will allow any object with no validation since we cannot even enforce that the input is an instance of the given type. To get rid of this error wrap the type with `pydantic.SkipValidation`.
  warn(
======================================================================
ERROR DETECTION API - DEMO
======================================================================

🎯 Testing on 4 REAL student solutions...
   Questions: Q1-Q4 (Probability, Trigonometry, Algebra, Complex Numbers)
   Student Attempts: Attempt1-4 (Real handwritten solutions)
2025-09-13 18:29:29 - src.models.robust_model_router - INFO - Initialized RobustMultiModelProcessor with openai provider
2025-09-13 18:29:29 - src.models.gemini_processor - INFO - Initialized Gemini client successfully
2025-09-13 18:29:29 - src.models.error_detector - INFO - Initialized ErrorDetector with openai approach

==================================================
🔍 ANALYZING SAMPLE 1: real_001
📚 Topic: Probability
📊 Difficulty: hard
💡 Problem: Probability problem about student guessing vs knowing answers
==================================================
🎯 GROUND TRUTH: ✅ No errors expected

🤖 API ANALYSIS:
2025-09-13 18:29:29 - src.models.robust_model_router - INFO - Starting robust parallel image processing with openai...
2025-09-13 18:29:41 - src.models.robust_model_router - INFO - Robust parallel processing completed successfully with openai
2025-09-13 18:29:49 - src.models.robust_model_router - INFO - Robust image analysis completed in 20.28s using openai
2025-09-13 18:29:49 - src.models.error_detector - INFO - Robust multi-model error detection completed: has_error=True, confidence=0.950, duration=20.29s using openai
   🔴 ERROR DETECTED: The student incorrectly calculates P(C ∩ G) by assuming P(C) = 1 - P(k), which is not correct. P(C) is the total probability of a correct answer, not the complement of P(k).
   💡 Correction: The correct approach is to use Bayes' theorem: P(k|C) = [P(C|k) * P(k)] / P(C). To find P(C), use the law of total probability: P(C) = P(C|k) * P(k) + P(C|G) * P(G).
   🔧 Hint: Remember that P(C) is the total probability of a correct answer, which includes both the probability of knowing the answer and guessing it correctly. Use the law of total probability to find P(C).
   📍 Location (Y): 5.0
   ⏱️  Processing time: 20.29s
   🏁 Solution complete: False
   🎨 Contains diagrams: True

📊 ACCURACY CHECK:
   ❌ FALSE POSITIVE: API detected error where none exists

📝 EXTRACTED SOLUTION STEPS:
   1. k: student knows answer
   2. G: student guessed the answer
   3. C: student's answer is correct
   ... and 9 more steps

==================================================
🔍 ANALYZING SAMPLE 2: real_002
📚 Topic: Trigonometry
📊 Difficulty: medium
💡 Problem: Find height of tree using angle of elevation
==================================================
🎯 GROUND TRUTH: ❌ Error Expected
   └─ Arithmetic error in final calculation
   └─ Correction: 47 × tan(35°) ≈ 47 × 0.7002 ≈ 32.9, not 33. The closest answer is b) 33

🤖 API ANALYSIS:
2025-09-13 18:29:49 - src.models.robust_model_router - INFO - Starting robust parallel image processing with openai...
2025-09-13 18:29:57 - src.models.robust_model_router - INFO - Robust parallel processing completed successfully with openai
2025-09-13 18:30:03 - src.models.robust_model_router - INFO - Robust image analysis completed in 13.78s using openai
2025-09-13 18:30:03 - src.models.error_detector - INFO - Robust multi-model error detection completed: has_error=True, confidence=0.950, duration=13.78s using openai
   🔴 ERROR DETECTED: The student incorrectly calculated the value of tan(35°) as 0.5.
   💡 Correction: The correct value of tan(35°) is approximately 0.7002. Therefore, the correct calculation should be: h = 47 x 0.7002 ≈ 32.9, which rounds to 33 feet.
   🔧 Hint: Remember to use a calculator to find the accurate value of trigonometric functions like tan(35°).
   ⏱️  Processing time: 13.78s
   🏁 Solution complete: True
   🎨 Contains diagrams: True

📊 ACCURACY CHECK:
   ✅ CORRECT: API detected error (matches ground truth)

📝 EXTRACTED SOLUTION STEPS:
   1. h = ?
   2. tan(35°) = h/47
   3. 
   ... and 3 more steps

==================================================
🔍 ANALYZING SAMPLE 3: real_003
📚 Topic: Algebra
📊 Difficulty: medium
💡 Problem: Solve 3(x-2)² = 75
==================================================
🎯 GROUND TRUTH: ❌ Error Expected
   └─ Incorrect solution to square root equation
   └─ Correction: From (x-2)² = 36, we get x-2 = ±6, so x = 2±6, giving x = 8 or x = -4

🤖 API ANALYSIS:
2025-09-13 18:30:03 - src.models.robust_model_router - INFO - Starting robust parallel image processing with openai...
2025-09-13 18:30:13 - src.models.robust_model_router - INFO - Robust parallel processing completed successfully with openai
2025-09-13 18:30:19 - src.models.robust_model_router - INFO - Robust image analysis completed in 15.87s using openai
2025-09-13 18:30:19 - src.models.error_detector - INFO - Robust multi-model error detection completed: has_error=True, confidence=0.950, duration=15.87s using openai
   🔴 ERROR DETECTED: The student incorrectly solved for x by adding 5 instead of 6 to 2.
   💡 Correction: After finding x - 2 = 6, the correct step is x = 2 + 6, which gives x = 8.
   🔧 Hint: Remember that when you take the square root of both sides, you should consider both the positive and negative roots.
   📍 Location (Y): 5.0
   ⏱️  Processing time: 15.87s
   🏁 Solution complete: False
   🎨 Contains diagrams: True

📊 ACCURACY CHECK:
   ✅ CORRECT: API detected error (matches ground truth)

📝 EXTRACTED SOLUTION STEPS:
   1. x = ?
   2. 3(x - 2)^2 = 75
   3. (x - 2)^2 = 36
   ... and 4 more steps

==================================================
🔍 ANALYZING SAMPLE 4: real_004
📚 Topic: Complex_Numbers
📊 Difficulty: hard
💡 Problem: Complex number conjugate and modulus calculation
==================================================
🎯 GROUND TRUTH: ❌ Error Expected
   └─ Possible error in complex number calculation
   └─ Correction: Need to verify the expansion and substitution steps carefully

🤖 API ANALYSIS:
2025-09-13 18:30:19 - src.models.robust_model_router - INFO - Starting robust parallel image processing with openai...
2025-09-13 18:30:32 - src.models.robust_model_router - INFO - Robust parallel processing completed successfully with openai
2025-09-13 18:30:40 - src.models.robust_model_router - INFO - Robust image analysis completed in 21.35s using openai
2025-09-13 18:30:40 - src.models.error_detector - INFO - Robust multi-model error detection completed: has_error=True, confidence=0.950, duration=21.35s using openai
   🔴 ERROR DETECTED: The student incorrectly expanded (z + 3)(z̅ + 3) as (2+3)(2̅ +3) and made errors in calculating |z|² and z + z̅.
   💡 Correction: 1. Correctly expand (z + 3)(z̅ + 3) using the formula for multiplying complex conjugates: (z + 3)(z̅ + 3) = (z + 3)(z̅ + 3) = |z + 3|².
2. Calculate |z|² correctly: |z|² = (1)² + (2)² = 1 + 4 = 5.
3. Calculate z + z̅ correctly: z + z̅ = (1 + 2i) + (1 - 2i) = 2.
4. Substitute and simplify: (z + 3)(z̅ + 3) = |z + 3|² = (|z| + 3)² = (√5 + 3)².
   🔧 Hint: Remember that for any complex number z = a + bi, the modulus is |z| = √(a² + b²) and the conjugate is z̅ = a - bi.
   ⏱️  Processing time: 21.35s
   🏁 Solution complete: False
   🎨 Contains diagrams: False

📊 ACCURACY CHECK:
   ✅ CORRECT: API detected error (matches ground truth)

📝 EXTRACTED SOLUTION STEPS:
   1. 1) expand expression
   2. (2+3)(2̅ +3) = 2² 2̅ + 3z + 9 = |z|² + 3(2+2̅)+9
   3. 
   ... and 6 more steps

======================================================================
📋 DEMO SUMMARY
======================================================================
✅ Demonstrated real-world error detection on:
   • Probability problems (Bayes' theorem)
   • Trigonometry problems (angle of elevation)
   • Algebra problems (quadratic equations)
   • Complex number arithmetic

🎯 Key Features Showcased:
   • Multi-modal analysis (OCR + LLM + VLM)
   • Step-level error detection
   • Educational feedback (corrections + hints)
   • Handwriting processing
   • Real student work analysis

🚀 Next Steps:
   1. Set up API keys in .env file
   2. Run: make dev (start API server)
   3. Test with: curl -X POST http://localhost:8000/api/v1/detect-error
   4. Run full evaluation: python scripts/run_eval.py
(env) tamaghnadutta@Tamaghnas-MacBook-Air tutor-vision-engine % 